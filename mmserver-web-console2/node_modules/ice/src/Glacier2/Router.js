// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `Router.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* slice2js browser-bundle-skip */
(function(module, require, exports)
{
/* slice2js browser-bundle-skip-end */
/* slice2js browser-bundle-skip */
    var __M = require("../Ice/ModuleRegistry").Ice.__M;
    var Glacier2 = __M.require(module, 
    [
        "../Glacier2/Session",
        "../Glacier2/PermissionsVerifier"
    ]).Glacier2;
    
    var Ice = __M.require(module, 
    [
        "../Ice/Object",
        "../Ice/ObjectPrx",
        "../Ice/Operation",
        "../Ice/Exception",
        "../Ice/Long",
        "../Ice/HashMap",
        "../Ice/HashUtil",
        "../Ice/ArrayUtil",
        "../Ice/StreamHelpers",
        "../Ice/Router"
    ]).Ice;
    
    var Slice = Ice.Slice;
/* slice2js browser-bundle-skip-end */

    /**
     * This exception is raised if a client tries to destroy a session
     * with a router, but no session exists for the client.
     * 
     * @see Router#destroySession
     * 
     **/
    Glacier2.SessionNotExistException = Slice.defineUserException(
        function(_cause)
        {
            Ice.UserException.call(this, _cause);
        },
        Ice.UserException,
        "Glacier2::SessionNotExistException",
        undefined, undefined,
        false,
        false);

    /**
     * The Glacier2 specialization of the {@link Ice.Router}
     * interface.
     * 
     **/
    Glacier2.Router = Slice.defineObject(
        undefined,
        Ice.Object,
        [
            Ice.Router
        ], 0,
        [
            "::Glacier2::Router",
            "::Ice::Object",
            "::Ice::Router"
        ],
        -1, undefined, undefined, false);

    Glacier2.RouterPrx = Slice.defineProxy(Ice.ObjectPrx, Glacier2.Router.ice_staticId, [
        Ice.RouterPrx]);

    Slice.defineOperations(Glacier2.Router, Glacier2.RouterPrx,
    {
        "getCategoryForClient": [, 2, 1, , , [7], , , , , ],
        "createSession": [, , , 1, 2, ["Glacier2.SessionPrx"], [[7], [7]], , 
        [
            Glacier2.CannotCreateSessionException,
            Glacier2.PermissionDeniedException
        ], , ],
        "createSessionFromSecureConnection": [, , , 1, 2, ["Glacier2.SessionPrx"], , , 
        [
            Glacier2.CannotCreateSessionException,
            Glacier2.PermissionDeniedException
        ], , ],
        "refreshSession": [, , , 1, , , , , 
        [
            Glacier2.SessionNotExistException
        ], , ],
        "destroySession": [, , , , , , , , 
        [
            Glacier2.SessionNotExistException
        ], , ],
        "getSessionTimeout": [, 2, 1, , , [4], , , , , ],
        "getACMTimeout": [, 2, 1, , , [3], , , , , ]
    });
/* slice2js browser-bundle-skip */
    exports.Glacier2 = Glacier2;
/* slice2js browser-bundle-skip-end */
/* slice2js browser-bundle-skip */
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
/* slice2js browser-bundle-skip-end */
