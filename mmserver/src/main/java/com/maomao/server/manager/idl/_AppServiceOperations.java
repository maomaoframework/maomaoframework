// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `AppService.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.maomao.server.manager.idl;

/**
 * App服务
 **/
public interface _AppServiceOperations
{
    void stopServer(Ice.Current __current);

    /**
     * 返回全部App
     * @param __current The Current object for the invocation.
     **/
    java.util.List<App> loadApps(Ice.Current __current);

    /**
     * 停止一个App的某一个实例
     * instanceId 传递为空时，表示停止该App的全部实例
     * @param __current The Current object for the invocation.
     **/
    String stopAppInstance(String appId, String instanceId, Ice.Current __current);

    /**
     * 停止一个App的某一个实例
     * instanceId 传递为空时，表示停止该App的全部实例
     * @param __current The Current object for the invocation.
     **/
    String restartAppInstance(String appId, String instanceId, Ice.Current __current);

    /**
     * 启动一个App实例
     * instanceId为空时,表示启动该App的全部实例
     * @param __current The Current object for the invocation.
     **/
    String startAppInstance(String appId, String instanceId, Ice.Current __current);

    /**
     * 删除一个App实例
     * @param __current The Current object for the invocation.
     **/
    String removeAppInstance(String appId, String instanceId, Ice.Current __current);

    /**
     * Create a new app
     * @param __current The Current object for the invocation.
     **/
    String createApp(String appId, Ice.Current __current);

    /**
     * 删除一个App
     * @param __current The Current object for the invocation.
     **/
    String removeApp(String appId, Ice.Current __current);

    /**
     * 停止一个App及其所有实例
     * @param __current The Current object for the invocation.
     **/
    String stopApp(String appId, Ice.Current __current);

    /**
     * 启动App的所有实例
     * @param __current The Current object for the invocation.
     **/
    String startApp(String appId, Ice.Current __current);

    /**
     * 重启一个应用的所有实例
     * @param __current The Current object for the invocation.
     **/
    String restartApp(String appId, Ice.Current __current);

    /**
     * 创建一个新的App实例
     * @param __current The Current object for the invocation.
     **/
    String createAppInstance(String appId, String appInstanceJson, Ice.Current __current);

    /**
     * 更新一个现有的App实例
     * @param __current The Current object for the invocation.
     **/
    String updateAppInstance(String appId, String instanceId, String appInstanceJson, Ice.Current __current);

    /**
     * 同步服务器信息
     * @param __current The Current object for the invocation.
     **/
    String syncServerInfo(Ice.Current __current);

    /**
     * 　返回服务器信息
     * @param __current The Current object for the invocation.
     **/
    String getHdpServerInfo(Ice.Current __current);

    /**
     * 　app与hdpserver保持同步状态
     * @param __current The Current object for the invocation.
     **/
    String appSyncStatus(String jsonInfo, String ip, int port, Ice.Current __current);

    /**
     * app停止时发送给hdp server的通知事件
     * @param __current The Current object for the invocation.
     **/
    String appStopNotify(String appId, String ip, int port, Ice.Current __current);

    /**
     * app启动完毕后，发送通知
     * @param __current The Current object for the invocation.
     **/
    String appStartupNotify(String appId, String ip, int port, Ice.Current __current);

    /**
     * 迫使服务器关闭
     * @param __current The Current object for the invocation.
     **/
    void forceAppInstanceShutdown(int seconds, Ice.Current __current);

    /**
     * 迫使服务器关闭
     * @param __current The Current object for the invocation.
     **/
    void forceAppInstanceRestart(int seconds, Ice.Current __current);
}
