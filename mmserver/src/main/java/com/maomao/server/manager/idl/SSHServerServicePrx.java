// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `SSHServerService.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.maomao.server.manager.idl;

/**
 * App服务
 **/
public interface SSHServerServicePrx extends Ice.ObjectPrx
{
    /**
     * 返回服务器信息
     **/
    public String loadServers();

    /**
     * 返回服务器信息
     * @param __ctx The Context map to send with the invocation.
     **/
    public String loadServers(java.util.Map<String, String> __ctx);

    /**
     * 返回服务器信息
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_loadServers();

    /**
     * 返回服务器信息
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_loadServers(java.util.Map<String, String> __ctx);

    /**
     * 返回服务器信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_loadServers(Ice.Callback __cb);

    /**
     * 返回服务器信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_loadServers(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 返回服务器信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_loadServers(Callback_SSHServerService_loadServers __cb);

    /**
     * 返回服务器信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_loadServers(java.util.Map<String, String> __ctx, Callback_SSHServerService_loadServers __cb);

    /**
     * 返回服务器信息
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_loadServers(IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 返回服务器信息
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_loadServers(IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 返回服务器信息
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_loadServers(java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 返回服务器信息
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_loadServers(java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 返回服务器信息
     * @param __result The asynchronous result object.
     **/
    public String end_loadServers(Ice.AsyncResult __result);

    /**
     * 添加一个服务器信息
     **/
    public String addServer(String serverJson);

    /**
     * 添加一个服务器信息
     * @param __ctx The Context map to send with the invocation.
     **/
    public String addServer(String serverJson, java.util.Map<String, String> __ctx);

    /**
     * 添加一个服务器信息
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addServer(String serverJson);

    /**
     * 添加一个服务器信息
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addServer(String serverJson, java.util.Map<String, String> __ctx);

    /**
     * 添加一个服务器信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addServer(String serverJson, Ice.Callback __cb);

    /**
     * 添加一个服务器信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addServer(String serverJson, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 添加一个服务器信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addServer(String serverJson, Callback_SSHServerService_addServer __cb);

    /**
     * 添加一个服务器信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addServer(String serverJson, java.util.Map<String, String> __ctx, Callback_SSHServerService_addServer __cb);

    /**
     * 添加一个服务器信息
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addServer(String serverJson, 
                                           IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 添加一个服务器信息
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addServer(String serverJson, 
                                           IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 添加一个服务器信息
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addServer(String serverJson, 
                                           java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 添加一个服务器信息
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_addServer(String serverJson, 
                                           java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 添加一个服务器信息
     * @param __result The asynchronous result object.
     **/
    public String end_addServer(Ice.AsyncResult __result);

    /**
     * 更新一个服务器信息
     *
     **/
    public String updateServer(String key, String serverJson);

    /**
     * 更新一个服务器信息
     *
     * @param __ctx The Context map to send with the invocation.
     **/
    public String updateServer(String key, String serverJson, java.util.Map<String, String> __ctx);

    /**
     * 更新一个服务器信息
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateServer(String key, String serverJson);

    /**
     * 更新一个服务器信息
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateServer(String key, String serverJson, java.util.Map<String, String> __ctx);

    /**
     * 更新一个服务器信息
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateServer(String key, String serverJson, Ice.Callback __cb);

    /**
     * 更新一个服务器信息
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateServer(String key, String serverJson, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 更新一个服务器信息
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateServer(String key, String serverJson, Callback_SSHServerService_updateServer __cb);

    /**
     * 更新一个服务器信息
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateServer(String key, String serverJson, java.util.Map<String, String> __ctx, Callback_SSHServerService_updateServer __cb);

    /**
     * 更新一个服务器信息
     * 
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateServer(String key, 
                                              String serverJson, 
                                              IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 更新一个服务器信息
     * 
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateServer(String key, 
                                              String serverJson, 
                                              IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 更新一个服务器信息
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateServer(String key, 
                                              String serverJson, 
                                              java.util.Map<String, String> __ctx, 
                                              IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 更新一个服务器信息
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateServer(String key, 
                                              String serverJson, 
                                              java.util.Map<String, String> __ctx, 
                                              IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 更新一个服务器信息
     * 
     * @param __result The asynchronous result object.
     **/
    public String end_updateServer(Ice.AsyncResult __result);

    /**
     * 删除一个服务器信息
     **/
    public String removeServer(String key);

    /**
     * 删除一个服务器信息
     * @param __ctx The Context map to send with the invocation.
     **/
    public String removeServer(String key, java.util.Map<String, String> __ctx);

    /**
     * 删除一个服务器信息
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_removeServer(String key);

    /**
     * 删除一个服务器信息
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_removeServer(String key, java.util.Map<String, String> __ctx);

    /**
     * 删除一个服务器信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_removeServer(String key, Ice.Callback __cb);

    /**
     * 删除一个服务器信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_removeServer(String key, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 删除一个服务器信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_removeServer(String key, Callback_SSHServerService_removeServer __cb);

    /**
     * 删除一个服务器信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_removeServer(String key, java.util.Map<String, String> __ctx, Callback_SSHServerService_removeServer __cb);

    /**
     * 删除一个服务器信息
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_removeServer(String key, 
                                              IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 删除一个服务器信息
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_removeServer(String key, 
                                              IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 删除一个服务器信息
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_removeServer(String key, 
                                              java.util.Map<String, String> __ctx, 
                                              IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 删除一个服务器信息
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_removeServer(String key, 
                                              java.util.Map<String, String> __ctx, 
                                              IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 删除一个服务器信息
     * @param __result The asynchronous result object.
     **/
    public String end_removeServer(Ice.AsyncResult __result);
}
