// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `App.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.maomao.server.manager.idl;

public class App implements java.lang.Cloneable, java.io.Serializable
{
    public String pk;

    public String appid;

    public String name;

    public String description;

    public String email;

    public String developer;

    public String versionLabel;

    public int version;

    public App()
    {
        pk = "";
        appid = "";
        name = "";
        description = "";
        email = "";
        developer = "";
        versionLabel = "";
    }

    public App(String pk, String appid, String name, String description, String email, String developer, String versionLabel, int version)
    {
        this.pk = pk;
        this.appid = appid;
        this.name = name;
        this.description = description;
        this.email = email;
        this.developer = developer;
        this.versionLabel = versionLabel;
        this.version = version;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        App _r = null;
        if(rhs instanceof App)
        {
            _r = (App)rhs;
        }

        if(_r != null)
        {
            if(pk != _r.pk)
            {
                if(pk == null || _r.pk == null || !pk.equals(_r.pk))
                {
                    return false;
                }
            }
            if(appid != _r.appid)
            {
                if(appid == null || _r.appid == null || !appid.equals(_r.appid))
                {
                    return false;
                }
            }
            if(name != _r.name)
            {
                if(name == null || _r.name == null || !name.equals(_r.name))
                {
                    return false;
                }
            }
            if(description != _r.description)
            {
                if(description == null || _r.description == null || !description.equals(_r.description))
                {
                    return false;
                }
            }
            if(email != _r.email)
            {
                if(email == null || _r.email == null || !email.equals(_r.email))
                {
                    return false;
                }
            }
            if(developer != _r.developer)
            {
                if(developer == null || _r.developer == null || !developer.equals(_r.developer))
                {
                    return false;
                }
            }
            if(versionLabel != _r.versionLabel)
            {
                if(versionLabel == null || _r.versionLabel == null || !versionLabel.equals(_r.versionLabel))
                {
                    return false;
                }
            }
            if(version != _r.version)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::idl::App");
        __h = IceInternal.HashUtil.hashAdd(__h, pk);
        __h = IceInternal.HashUtil.hashAdd(__h, appid);
        __h = IceInternal.HashUtil.hashAdd(__h, name);
        __h = IceInternal.HashUtil.hashAdd(__h, description);
        __h = IceInternal.HashUtil.hashAdd(__h, email);
        __h = IceInternal.HashUtil.hashAdd(__h, developer);
        __h = IceInternal.HashUtil.hashAdd(__h, versionLabel);
        __h = IceInternal.HashUtil.hashAdd(__h, version);
        return __h;
    }

    public App
    clone()
    {
        App c = null;
        try
        {
            c = (App)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(pk);
        __os.writeString(appid);
        __os.writeString(name);
        __os.writeString(description);
        __os.writeString(email);
        __os.writeString(developer);
        __os.writeString(versionLabel);
        __os.writeInt(version);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        pk = __is.readString();
        appid = __is.readString();
        name = __is.readString();
        description = __is.readString();
        email = __is.readString();
        developer = __is.readString();
        versionLabel = __is.readString();
        version = __is.readInt();
    }

    static public void
    __write(IceInternal.BasicStream __os, App __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public App
    __read(IceInternal.BasicStream __is, App __v)
    {
        if(__v == null)
        {
             __v = new App();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final App __nullMarshalValue = new App();

    public static final long serialVersionUID = 9058373507932890369L;
}
